name: Deploy buy runner

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: 'gradle'

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Run database
        run: docker compose -f ./docker-compose.yml up postgres -d

      - name: BootRun Application
        run: ./gradlew bootRun &

      - name: Run Tests
        run: ./gradlew test

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get the commit hash
        id: commit_hash
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t l1zail/segmentation:${{ env.COMMIT_HASH }} -f Dockerfile .

      - name: Push Docker image
        run: |
          docker push l1zail/segmentation:${{ env.COMMIT_HASH }}

      - name: Tag Docker image as latest
        run: |
          docker tag l1zail/segmentation:${{ env.COMMIT_HASH }} l1zail/segmentation:latest

      - name: Push Docker image as latest
        run: |
          docker push l1zail/segmentation:latest     

  prepare-environment:
    runs-on: self-hosted
    needs: docker
    steps:
      - name: Stop and remove containers, networks
        run: sudo docker-compose down
      - name: Remove unused data
        run: sudo docker system prune -a -f
      - name: Remove existing Docker image
        run: |
          docker rmi -f l1zail/segmentation:latest || true
      - name: Pull latest Docker image
        run: |
          docker pull l1zail/segmentation:latest

  deploy:
    runs-on: self-hosted
    needs: prepare-environment
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: docker-compose
        run: sudo docker-compose up -d